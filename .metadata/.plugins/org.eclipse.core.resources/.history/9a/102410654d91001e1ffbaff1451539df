#include "./Control.h"

//global variable to store the confirmation of received passwords
extern uint8 match_NotMatch ;

void PassWrong_case(void(*func)(void)){
	if (match_NotMatch == 2) {
		(*func)();
	} else {
		RecievePass();
		readPass();

		match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
		UART_sendByte(match_NotMatch);
		if (match_NotMatch == 2) {
			(*func)();
		} else {
			RecievePass();
			readPass();

			match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
			UART_sendByte(match_NotMatch);
			if (match_NotMatch == 2) {
				(*func)();
			} else {
				Buzzer_on();
				DelaySeconds(60);
				Buzzer_off();
			}
		}
	}
}

int main(void) {

	UART_ConfigType ptr_uart_init = { Bits_Data_8, disabled, Bits_Stop_1,
			RATE_9600 };
	UART_init(&ptr_uart_init);

	Buzzer_init();
	DcMotor_init();
	SREG |= (1 << 7);

	TWI_ConfigType *ptr_twi_init;
	ptr_twi_init->address = 0x01;
	ptr_twi_init->bit_rate = 2;
	TWI_init(&ptr_twi_init);

	EnterPass();

	while (1) {
		key_received = UART_recieveByte();

		if (key_received == '+') {
			RecievePass();
			readPass();

			match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
			UART_sendByte(match_NotMatch);

			PassWrong_case(Door_Sequence);
//			if (match_NotMatch == 2) {
//				Door_Sequence();
//			} else {
//				RecievePass();
//				readPass();
//
//				match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
//				UART_sendByte(match_NotMatch);
//				if (match_NotMatch == 2) {
//					Door_Sequence();
//				} else {
//					RecievePass();
//					readPass();
//
//					match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
//					UART_sendByte(match_NotMatch);
//					if (match_NotMatch == 2) {
//						Door_Sequence();
//					} else {
//						Buzzer_on();
//						DelaySeconds(60);
//						Buzzer_off();
//					}
//				}
//			}
		} else if (key_received == '-') {
			RecievePass();
			readPass();

			match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
			UART_sendByte(match_NotMatch);
			if (match_NotMatch == 2) {
				EnterPass();
			} else {
				RecievePass();
				readPass();

				match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
				UART_sendByte(match_NotMatch);
				if (match_NotMatch == 2) {
					EnterPass();
				} else {
					RecievePass();
					readPass();

					match_NotMatch = CheckMatchingPass(Pass1, Pass_saved);
					UART_sendByte(match_NotMatch);
					if (match_NotMatch == 2) {
						EnterPass();
					} else {
						Buzzer_on();
						DelaySeconds(60);
						Buzzer_off();
					}
				}
			}

		}
	}

}

